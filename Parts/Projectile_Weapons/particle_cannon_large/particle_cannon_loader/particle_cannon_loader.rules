Part : <./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/ParticleCannonLargeLoader"
	IconNameKey = "Parts/ParticleCannonLargeLoaderIcon"
	ID = ultranova.particle_cannon_large_loader
	EditorGroup = "WeaponsProjectile"
	DescriptionKey = "Parts/ParticleCannonLargeLoaderDesc"
	Resources
	[
		[steel, 100]
		[coil2, 25]
		[tristeel, 50]
	]
	Size = [2, 5]
	Density = 2
	SelectionTypeID = "particle_cannon"
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 10000
	TypeCategories = [weapon, uses_ammo, is_crewed, particle_cannon_large, particle_cannon_large_ammo]
	ReceivableBuffs = [RailgunReverseOperation, ParticleCannonNeedsPower]
	AllowedDoorLocations
	[
		[-1, 4]
		[0, 5]
		[1, 5]
		[2, 4]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [38.4, 96]
	}
	Components : ^/0/Components
	{
		BuffOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, PartCrew]
			Mode = All
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles = [BuffOperational, RailgunReverseOperationBuffToggle]
			Mode = All
		}

		RailgunReverseOperationBuffToggle
		{
			Type = BuffToggle
			BuffType = RailgunReverseOperation
		}

		LoadBatteryForwardToggle
		{
			Type = BuffToggle
			BuffType = ParticleCannonNeedsPower
		}


		LoadBatteryForward
		{
			Type = ToggledComponents
			Toggle = LoadBatteryForwardToggle
			Components
			{
				ForwardPower
				{
					Type = ResourceStorageProxy
					ResourceType = battery
					PartLocation = [1, -1]
					PartCriteria
					{
						Category = particle_cannon_large_barrel
						Rot = 0
						Left = 0
						Right = 2
						Bottom = 0
					}
					ComponentID = BatteryStorage
				}

				WaitForTheOne //This component makes sure that the front loader waits until there is more than one battery.
				{
					Type = ThresholdToggle
					AmountFrom = BatteryStorage
					MinAmount = 1.1 / 4
				}

				ForwardLoader
				{
					Type = ResourceConverter
					OperationalToggle = WaitForTheOne
					FromStorage = BatteryStorage
					ToStorage = ForwardPower
					FromQuantity = 1000
					ToQuantity = 1000
					Interval = .25
				}
			}
		}


		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		CommandConsumer
		{
			Type = CommandConsumer
			OperationalToggle = PowerToggle
			CommandPoints = 6
		}

		LoadedAmmo
		{
			Type = ResourceStorage
			ResourceType = bullet
			MaxResources = 6
			DelayBeforeReadyToUse = .25
			AnticipateMoreResourceFrom = [AmmoStorage]
			ToggleOnResources = 6
			ToggleOffResources = 5
		}

		AmmoStorage
		{
			Type = ResourceStorage
			ResourceType = bullet
			MaxResources = 15
			ToggleOnResources = 6
			ToggleOffResources = 5
		}
		AmmoConsumer
		{
			Type = ResourceConsumer
			ResourceType = bullet
			Storage = AmmoStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			AdditionalStorageForJobPriority = [LoadedAmmo]
			OperationalToggle = PowerToggle
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/AmmoDeliver
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Weapon_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		BulletEmitter // This is called "BulletEmitter" to allow chaining with the launcher.
		{
			Type = TriggerProxy
			PartLocation = [0, -1]
			PartCriteria
			{
				Category = particle_cannon_large
				Rot = 0
				Left = 0
				Right = 2
				Bottom = 0
			}
			ComponentID = BulletEmitter
		}

		PowerDrainOnShoot
		{
			Type = ResourceChange
			Trigger = BulletEmitter
			ResourceStorage = BatteryStorage
			Amount = -1000
		}

		AmmoPrereq
		{
			Type = MultiResourceStorage
			ResourceType = bullet
			ResourceStorages = [LoadedAmmo, AmmoStorage]
			ToggleOnResource = 6
			ToggleOffResource = 5
		}

		RailgunBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = Railgun
			BuffAmount = 0
			BuffArea = [0, -1, 2, 1]
			Criteria
			{
				Category = particle_cannon_large
				Rot = 0
				Left = 0
				Right = 2
				Bottom = 0
			}
		}

		OperationBuffProvider
		{
			Type = AreaBuffProvider
			BuffType = RailgunOperation
			BuffArea = [0, -1, 2, 1]
			OperationalToggle = BuffOperational
			Criteria
			{
				Category = particle_cannon_large
				Rot = 0
				Left = 0
				Right = 2
				Bottom = 0
			}
		}

		AmmoLoader
		{
			Type = ResourceConverter
			FromStorage = AmmoStorage
			ToStorage = LoadedAmmo
			FromQuantity = 1
			ToQuantity = 1
			Interval = .15
		}

		LoadEffects
		{
			Type = TriggeredEffects
			Trigger = AmmoLoader
			MediaEffects = &/COMMON_EFFECTS/AmmoLoad
		}

		CrewLocation1
		{
			Type = CrewLocation
			Location = [0.375, 4.21875]
			Rotation = 0d
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [1.625, 4.21875]
			Rotation = 0d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 2
			DefaultPriority = &/PRIORITIES/Weapon_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [AmmoPrereq]
			CrewDestinations
			[
				[0.375, 4.21875]
				[1.625, 4.21875]
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
			]
		}

		InheritedGraphics
		{
			Type = Graphics
			Location = [1, 1.5]
			OperationalToggle = IsOperational
			OperationalDoodad
			{
				Layer = "turrets"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"../particle_cannon_extender/doodads_on1.png"
							"../particle_cannon_extender/doodads_on2.png"
							"../particle_cannon_extender/doodads_on3.png"
							"../particle_cannon_extender/doodads_on4.png"
							"../particle_cannon_extender/doodads_on5.png"
							"../particle_cannon_extender/doodads_on4.png"
							"../particle_cannon_extender/doodads_on3.png"
							"../particle_cannon_extender/doodads_on2.png"
						]
						Size = [2, 3]
						AnimationInterval = 0.1
						AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "turrets"
				DamageLevels
				[
					{
						File = "../particle_cannon_extender/doodads_off.png"
						Size = [2, 3]
					}
				]
			}
		}

		Graphics
		{
			Type = Graphics
			Location = [1, 2.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [2, 5]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [2, 5]
						AnimationInterval = 0.1
						AnimationStartTime = Zero
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [2, 5]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [2, 5]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [2, 5]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [2, 5]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [2, 5]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [2, 5]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_glows.png"
						Size = [2, 5]
					}
				]
			}
		}

		LoadedAmmoSprites
		{
			Type = ResourceSprites
			Location = [1, 3]
			ResourceStorage = LoadedAmmo
			Layer = "doodads_high"
			ResourceLevels
			[
				{
					File = "loaded_bullets1.png"
					Size = [1, 2]
				}
				{
					File = "loaded_bullets2.png"
					Size = [1, 2]
				}
				{
					File = "loaded_bullets3.png"
					Size = [1, 2]
				}
				{
					File = "loaded_bullets4.png"
					Size = [1, 2]
				}
				{
					File = "loaded_bullets5.png"
					Size = [1, 2]
				}
				{
					File = "loaded_bullets6.png"
					Size = [1, 2]
				}
			]
		}

		AmmoSpritesA
		{
			Type = ResourceSprites
			Location = [0.1875, 4.515625]
			Rotation = -90d
			ResourceStorage = AmmoStorage
			Layer = "doodads_low"
			RangeLow = 0
			RangeHigh = 5
			ResourceLevels
			[
				{
					File = "./Data/ships/terran/cannon_med/bullets7.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/cannon_med/bullets8.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/cannon_med/bullets9.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/cannon_med/bullets10.png"
					Size = [1, 1]
				}
				{
					File = "./Data/ships/terran/cannon_med/bullets11.png"
					Size = [1, 1]
				}
			]
		}

		AmmoSpritesB : &AmmoSpritesA
		{
			Type = ResourceSprites
			Location = [0.859375, 4.515625]
			RangeLow = 6
			RangeHigh = 10
		}

		AmmoSpritesC : &AmmoSpritesA
		{
			Type = ResourceSprites
			Location = [1.5, 4.515625]
			RangeLow = 11
			RangeHigh = 15
		}

		AmmoSprites1
		{
			Type = ResourceSprites
			Location = [1.5, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			RangeLow = 0
			RangeHigh = 1000
			ResourceLevels
			[
				{
					File = "../particle_cannon_extender/batteries5.png"
					Size = [1, 2]
				}
			]
		}

		AmmoSprites2
		{
			Type = ResourceSprites
			Location = [1.5, 2.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			RangeLow = 1001
			RangeHigh = 2000
			ResourceLevels
			[
				{
					File = "../particle_cannon_extender/batteries5.png"
					Size = [1, 2]
				}
			]
		}

		AmmoSprites3
		{
			Type = ResourceSprites
			Location = [.5, 1]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			RangeLow = 2001
			RangeHigh = 3000
			ResourceLevels
			[
				{
					File = "../particle_cannon_extender/batteries5.png"
					MirrorU = true
					Size = [1, 2]
				}
			]
		}

		AmmoSprites4
		{
			Type = ResourceSprites
			Location = [.5, 2.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			RangeLow = 3001
			RangeHigh = 4000
			ResourceLevels
			[
				{
					File = "../particle_cannon_extender/batteries5.png"
					MirrorU = true
					Size = [1, 2]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1, 2.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [1, 2.5]
			
			HitEffects
			[
				{
					Type = ExplosiveDamage
					TotalDamage = 25000
					Radius = 4.5
					Delay = .05
					FireChancePerNDamage = 50%
					NDamage = 1000
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
				{
					Type = ExplosiveDamage
					TotalDamage = 5000
					Radius = 3.5
					Delay = .05
					Filter
					{
						OperationalHealth = false
						StructuralHealth = true
						Friendlies = true
					}
				}
			]
		}

		RecursiveDeath
		{
			Type = DeathEffects
			Location = [1, -.5]

			HitEffects
			[
				{
					Type = AreaDamage
					Damage = 3000
					Radius = .6
					Falloff = 0
					Delay = .15
					Filter
					{
						OperationalHealth = true
						StructuralHealth = false
						Friendlies = true
					}
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1, 2.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of ammo.
				{
					Toggle = AmmoPrereq
					Delay = &<../particle_cannon_barrel/particle_cannon_barrel.rules>/Part/Components/Weapon/FireInterval
					AtlasSprite
					{
						File = &/INDICATORS/NoAmmo
						Size = [1.5, 1.5]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1.5, 1.5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [2, 5]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		AmmoCapacity = (&~/Part/Components/AmmoStorage/MaxResources) + (&~/Part/Components/LoadedAmmo/MaxResources)

		RecAmmo = &../StatsByCategory/0/Stats/AmmoPerSecond
		RecCrew = (&CrewRequired) + (&RecAmmo) * 2
	}

	StatsByCategory = &<../particle_cannon_barrel/particle_cannon_barrel.rules>/Part/StatsByCategory
	StatsNotesKey = "Stats/ParticleCannonNotes"
}
