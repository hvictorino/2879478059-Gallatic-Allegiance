Part : &<./Data/ships/terran/base_part_terran.rules>/Part
{
	NameKey = "Parts/AntigravSmall"
	IconNameKey = "Parts/AntigravSmallIcon"
	ID = ultranova.antigrav_small
	OtherIDs = [ultranova.federation_half_antigrav_small]
	EditorGroup = "Flight"
	DescriptionKey = "Parts/AntigravSmallDesc"
	Resources
	[
		[steel, 8]
		[coil, 3]
	]
	TypeCategories = [thruster, antigrav]
	Size = [1, 1]
	SelectionPriority = 1
	SelectionTypeByRotation = true
	SelectionTypeID = "antigrav"
	MaxHealth = 1000
	InitialPenetrationResistance = 1
	ThrusterForce = 100
	FuelUsage = 50
	ReceivableBuffs : ^/0/ReceivableBuffs []
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [21.33, 21.33]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage]
			Mode = All
		}
		
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
		}

		/*RoofToggle
		{
			Type = UIToggle
			ToggleID = "roof_detail_mode"
			Default = 0
			RequiresCommand = false
		}
		*/

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Thruster_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
		}

		ThrusterAnimationSpeed
		{
			Type = MultiValue
			Values = [MainThruster, LateralThruster]
			Mode = Max
			Abs = true
		}
		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			//DoodadToggle = RoofToggle
			AnimationSpeedFactor = ThrusterAnimationSpeed
			AnimationSpeedFactorRenormalize = [0.75, 2.0]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
					{
						File = "floor_33.png"
						Size = [1, 1]
					}
					{
						File = "floor_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [1, 1]
						AnimationInterval = 0.075
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [.5, .5]
			ResourceStorage = BatteryStorage
			Layer = "weapons"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [1, 1]
				}
				{
					File = "batteries2.png"
					Size = [1, 1]
				}
				{
					File = "batteries3.png"
					Size = [1, 1]
				}
				{
					File = "batteries4.png"
					Size = [1, 1]
				}
			]
		}

		MainThruster
		{
			Type = Thruster
			Location = [0.5, 1.5]
			Rotation = 90d
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = -1
			MaxActivation = 1
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		LateralThruster : &MainThruster
		{
			Type = Thruster
			ChainedTo = MainThruster
			Rotation = 90d// Relative to main thruster.
			OperationalToggle = IsOperational
			Force = &../../ThrusterForce
			MinActivation = -1
			MaxActivation = 1
			MinUncommandedActivation = &MinActivation
			MaxUncommandedActivation = &MaxActivation
			FuelStorage = BatteryStorage
			FuelUsagePerSecond = &../../FuelUsage
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [.5, .5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/MachinesOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/MachinesOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyed
			Location = [.5, .5]
		}

		ThrusterHum
		{
			Type = ContinuousEffects
			Location = [.5, .5]
			OperationalToggle = IsOperational
			MediaEffects
			[
				: /COMMON_SOUNDS/ThrusterHum
				{
					Volume = .05
					Speed = 1.5
					MaxConcurrentVolume = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [0.5, 0.5]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [.5, .5]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [.5, .5]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}
	
	Stats
	{
		ThrusterForce = &~/Part/ThrusterForce
		ThrusterPowerUsage = (&~/Part/FuelUsage) / 1000
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000

		RecPower = (&ThrusterPowerUsage) / 2
		RecCrew = (&RecPower) * 4
	}
}
